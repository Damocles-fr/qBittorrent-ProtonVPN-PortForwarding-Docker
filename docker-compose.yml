version: "3.8"
services:
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - TZ=${TZ}
      - VPN_SERVICE_PROVIDER=protonvpn
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=${WG_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WG_ADDRESSES}
      # Optional Proton filters (uncomment & set as you like):
      # - SERVER_COUNTRIES=${SERVER_COUNTRIES}
      # - SERVER_CITIES=${SERVER_CITIES}
      # - SERVER_HOSTNAMES=${SERVER_HOSTNAMES}
      - PORT_FORWARDING=on
      # Allow local LAN access to WebUI via mapped port(s)
      - FIREWALL_INPUT_PORTS=${WEBUI_PORT}
      - FIREWALL_OUTBOUND_SUBNETS=${LAN_SUBNETS}
      # Persist forwarded port (useful for debugging/automation)
      - PORT_FORWARDING_STATUS_FILE=/gluetun/forwarded_port
      - LOG_LEVEL=info
    volumes:
      - ${HOST_GLUE}/:/gluetun
    ports:
      # expose qBittorrent WebUI through the VPN stack
      - "${WEBUI_PORT}:8080/tcp"
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    # Run *inside* gluetun's network stack
    network_mode: "container:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
    volumes:
      - ${HOST_CONFIG}/:/config
      - ${HOST_DOWNLOADS}/:/Downloads
    depends_on:
      - gluetun
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 4 * * *
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
